#include <stdio.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "driver/gpio.h"
#include "driver/adc.h"

#define OUT_PIN GPIO_NUM_2 
#define PIN_13 ADC2_CHANNEL_4
#define freq 1

// toggles the state of the output pin 2 with the defined frequency 

void rapport_cyclique_to_wait_time(double rc, int* up_time, int* down_time ){
    *up_time = (int)(1000*rc);
    *down_time = (int)((1-rc)*1000);
}

double rapport_cyclique_to_amp(double rc){
    return rc * MAX_AMP;
}

void app_main() {

    adc1_config_width(ADC_WIDTH_BIT_12);
    adc1_config_channel_atten(ADC1_CHANNEL_6,ADC_ATTEN_DB_0);
    uint32_t adc_reading = 0;

    // Configure the GPIO as an output
    gpio_config_t io_conf = {
        .pin_bit_mask = (1ULL << OUT_PIN),
        .mode = GPIO_MODE_OUTPUT,
        .intr_type = GPIO_INTR_DISABLE,
        .pull_up_en = GPIO_PULLUP_DISABLE,
        .pull_down_en = GPIO_PULLDOWN_DISABLE,
    };
    gpio_config(&io_conf);
    int up_time, down_time;
    rapport_cyclique_to_wait_time(1,&up_time,&down_time);

    while (1) {

        gpio_set_level(OUT_PIN,1);
        vTaskDelay(pdMS_TO_TICKS(up_time)); // wait for the up_time
        gpio_set_level(OUT_PIN,0);
        vTaskDelay(pdMS_TO_TICKS(down_time)); // wait for the down_time
        }
}
